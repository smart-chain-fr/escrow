{ parameter
    (or (or (or (bytes %agree) (bytes %cancel_escrow))
            (or (pair %initialize_escrow
                   (pair (pair (option %broker address) (bytes %id))
                         (pair (mutez %price) (string %product)))
                   (address %seller))
                (pair %receive_item (bytes %id) (option %proof string))))
        (address %setAdmin)) ;
  storage
    (pair (pair (pair (address %admin)
                      (big_map %disputes
                         int
                         (pair (pair (address %buyer) (nat %price)) (pair (address %seller) (timestamp %time)))))
                (pair (big_map %escrows
                         bytes
                         (pair (pair (pair (pair (option %broker address) (address %buyer))
                                           (pair (map %comment string string) (mutez %price)))
                                     (pair (pair (string %product) (option %proof string))
                                           (pair (address %seller) (string %state))))
                               (option %time timestamp)))
                      (big_map %judge_reward string nat)))
          (pair (pair (big_map %judges nat address) (option %payment_contract address))
                (option %voting_contract address))) ;
  code { NIL operation ;
         PUSH string "Only admin" ;
         PUSH string "Escrow not found" ;
         PUSH string "Cancel already requested" ;
         PUSH string "Initialized" ;
         PUSH string "Buyer canceled" ;
         PUSH string "Seller canceled" ;
         PUSH string "Canceled" ;
         LAMBDA
           address
           (contract unit)
           { CONTRACT unit ; IF_NONE { PUSH string "Bad address" ; FAILWITH } {} } ;
         DIG 9 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 9 ;
                 DIG 10 ;
                 DROP 2 ;
                 IF_LEFT
                   { DIG 3 ;
                     DIG 7 ;
                     DROP 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { DIG 6 ; FAILWITH } { DIG 7 ; DROP } ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     AND ;
                     IF { PUSH string "Access denied" ; FAILWITH } {} ;
                     DIG 4 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     COMPARE ;
                     NEQ ;
                     DIG 5 ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     COMPARE ;
                     NEQ ;
                     DIG 6 ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     COMPARE ;
                     NEQ ;
                     AND ;
                     AND ;
                     IF { PUSH string "Escrow already finished" ; FAILWITH } {} ;
                     NONE timestamp ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     COMPARE ;
                     NEQ ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     AND ;
                     IF { DUP ;
                          CDR ;
                          IF_NONE
                            { PUSH string "A proof is needed to validate the escrow" ; FAILWITH }
                            {} ;
                          PUSH int 86400 ;
                          SWAP ;
                          NOW ;
                          SUB ;
                          COMPARE ;
                          LT ;
                          IF { PUSH string "Too early to release payment" ; FAILWITH }
                             { PUSH unit Unit } }
                        { PUSH unit Unit } ;
                     DROP ;
                     DUP ;
                     CDR ;
                     PUSH string "Validated" ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     DUP 4 ;
                     CDR ;
                     DUP 5 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 6 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DIG 4 ;
                     DIG 5 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { DIG 8 ; FAILWITH } { DIG 9 ; DROP } ;
                     DUP 6 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     COMPARE ;
                     NEQ ;
                     DUP 8 ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     COMPARE ;
                     NEQ ;
                     DIG 9 ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     COMPARE ;
                     NEQ ;
                     AND ;
                     AND ;
                     IF { PUSH string "Escrow can not be canceled" ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { DUP 7 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          COMPARE ;
                          EQ ;
                          IF { DIG 6 ; DROP ; DUP 7 ; FAILWITH }
                             { DUP 6 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CDR ;
                               COMPARE ;
                               EQ ;
                               IF { DIG 6 ;
                                    DROP ;
                                    DUP ;
                                    CDR ;
                                    DUP 6 ;
                                    DUP 3 ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    DUP 3 ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    DIG 2 ;
                                    CAR ;
                                    CAR ;
                                    PAIR ;
                                    PAIR }
                                  { DUP ;
                                    CDR ;
                                    DIG 7 ;
                                    DUP 3 ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    DUP 3 ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    DIG 2 ;
                                    CAR ;
                                    CAR ;
                                    PAIR ;
                                    PAIR } } }
                        { DIG 6 ; DROP } ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { DUP 6 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          COMPARE ;
                          EQ ;
                          IF { DIG 5 ; DROP ; DIG 5 ; FAILWITH }
                             { DIG 6 ;
                               DROP ;
                               DUP 6 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CDR ;
                               COMPARE ;
                               EQ ;
                               IF { DIG 5 ;
                                    DROP ;
                                    DUP ;
                                    CDR ;
                                    DUP 6 ;
                                    DUP 3 ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    DUP 3 ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    DIG 2 ;
                                    CAR ;
                                    CAR ;
                                    PAIR ;
                                    PAIR }
                                  { DUP ;
                                    CDR ;
                                    DIG 6 ;
                                    DUP 3 ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    DUP 3 ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    DIG 2 ;
                                    CAR ;
                                    CAR ;
                                    PAIR ;
                                    PAIR } } }
                        { DIG 5 ; DIG 6 ; DROP 2 } ;
                     DIG 4 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     COMPARE ;
                     EQ ;
                     IF { DUP ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 4 ;
                          SWAP ;
                          EXEC ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          UNIT ;
                          TRANSFER_TOKENS ;
                          NIL operation ;
                          SWAP ;
                          CONS }
                        { DIG 3 ; DROP ; NIL operation } ;
                     DUP 4 ;
                     CDR ;
                     DUP 5 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 6 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DIG 4 ;
                     DIG 5 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR } }
               { DIG 2 ;
                 DIG 3 ;
                 DIG 4 ;
                 DIG 5 ;
                 DIG 7 ;
                 DROP 5 ;
                 IF_LEFT
                   { DIG 3 ;
                     DIG 4 ;
                     DROP 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     MEM ;
                     IF { PUSH string "Escrow already exists" ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     AMOUNT ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "The amount sent doesn't correspond to the price" ; FAILWITH }
                        {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     NONE timestamp ;
                     DIG 6 ;
                     DUP 6 ;
                     CDR ;
                     PAIR ;
                     NONE string ;
                     DUP 7 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PAIR ;
                     PAIR ;
                     DUP 6 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     EMPTY_MAP string string ;
                     PUSH string "" ;
                     SOME ;
                     PUSH string "seller" ;
                     UPDATE ;
                     PUSH string "" ;
                     SOME ;
                     PUSH string "buyer" ;
                     UPDATE ;
                     PAIR ;
                     SENDER ;
                     DUP 8 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { DIG 3 ; FAILWITH } { DIG 3 ; DROP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET ;
                     IF_NONE { DIG 2 ; FAILWITH } { DIG 3 ; DROP } ;
                     NOW ;
                     SOME ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 4 ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP 3 ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 5 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DIG 3 ;
                     DIG 4 ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR } } }
           { DIG 2 ;
             DIG 3 ;
             DIG 4 ;
             DIG 5 ;
             DIG 6 ;
             DIG 7 ;
             DIG 8 ;
             DROP 7 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF { DIG 2 ;
                  DROP ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  DUP 3 ;
                  CAR ;
                  CDR ;
                  DIG 3 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  DIG 3 ;
                  PAIR ;
                  PAIR ;
                  PAIR }
                { DROP ; SWAP ; FAILWITH } ;
             SWAP ;
             PAIR } } }

